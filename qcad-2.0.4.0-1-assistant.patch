--- qcad-2.0.4.0-1.src/qcad/src/qc_applicationwindow.cpp.assistant	2004-09-14 22:13:07.000000000 +0200
+++ qcad-2.0.4.0-1.src/qcad/src/qc_applicationwindow.cpp	2006-05-05 14:20:03.262797825 +0200
@@ -27,6 +27,9 @@
 #include "qc_applicationwindow.h"
 
 #include <fstream>
+#include <sys/types.h>
+#include <sys/wait.h>
+#include <unistd.h>
 
 #include <qaccel.h>
 #include <qaction.h>
@@ -2774,11 +2777,44 @@
 #if QT_VERSION>=0x030200 
         assistant->setArguments(args);
 #endif
+        connect( assistant, SIGNAL(error(const QString&)), this, SLOT(slotAssistantError(const QString&)) );
     }
     assistant->openAssistant();
     //assistant->showPage("index.html");
 }
 
+void QC_ApplicationWindow::slotAssistantError(const QString&) {
+    if ( !assistant->isOpen() ) {
+        pid_t pid;
+	if ( (pid = fork()) < 0 ) {
+	    perror( "fork" );
+	    QMessageBox::critical( this, QC_APPNAME, "Could not fork child process." );
+	    return;
+	}
+	if ( pid==0 ) {  // child
+  	    pid_t gcpid;
+	    if ( (gcpid = fork()) < 0 ) {
+	        perror( "fork" );
+		_exit(1);
+	    }
+	    if ( gcpid==0 ) {  // grandchild
+	        char* argv[] = { "xdg-open",
+				 "/usr/share/qcad/doc/cad/index.html",
+				 0
+		};
+		execvp( argv[0], argv);
+		perror( "execvp" );
+		_exit(1);
+	    }
+	    int status;
+	    waitpid( pid, &status, 0 );
+	    _exit(0);
+	}
+	// parent
+	int status;
+	waitpid( pid, &status, 0 );
+    }
+}
 
 
 /**
--- qcad-2.0.4.0-1.src/qcad/src/qc_applicationwindow.h.assistant	2004-09-14 22:13:07.000000000 +0200
+++ qcad-2.0.4.0-1.src/qcad/src/qc_applicationwindow.h	2006-05-05 14:20:03.262797825 +0200
@@ -224,6 +224,8 @@
     /** resizes window to 640x480 for screen shots */
     void slotTestResize1024();
 
+    void slotAssistantError(const QString&);
+
 signals:
     void gridChanged(bool on);
     void draftChanged(bool on);
